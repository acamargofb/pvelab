%           %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%           %%%%%%%%%%%%% --- DO NOT CHANGE ----%%%%%%%%%%%%%%%
%           %%%%%%% Setup file for The pipeline program%%%%%%%%
%           %%%%%%%%%%%%% Syntax: Matlab syntax %%%%%%%%%%%%%%%
%           %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Setting up the menus given in task named 'Others' for The Pipeline Program
%   the different methods and which task it belongs.
%
% The setup is addede to the end of project structure (after the user defined setupfile):
%  project.pipeline.taskSetup{TaskIndex,MethodIndex}
%
%
% %%%%%%% NOTE: ONLY GIVEN SETUP FIELDS ARE ACCEPT BY THE PIPELINE PROGRAM %%%%%%%
%__________________________________________________________________________________________________________________
%   tmpTask=[]                                          %(Matlab code) Resets the temporary data structure.
%
%   TaskIndex=                                          %(numeric) Order of current task in the pipeline: 
%                                                           1 is the first task and placed left.
%   MethodIndex=                                        %(numeric) Order of current methods in current task:
%                                                           1 is first and placed highst in the popup menu.
%   tmpTask.task=                                       %(string) Name of task to appear in the pipeline.
%   tmpTask.method=                                     %(string) Name of method in short terme to appear in popup menu.
%   tmpTask.method_name=                                %(string)(OPTIONAL) Full name of method to appear as hint 
%                                                           in the user-interface.
%   tmpTask.function_name=                              %(string) (OPTIONAL) Name of function (*.m, *.exe or alike) 
%                                                           realising the method.
%   tmpTask.description=                                %(string) Short description for the method will appear in 
%                                                           the information frame, when methos is selected.
%   tmpTask.require_os=					%(numeric) =0 indicates no OS-requirements. =1 or =2
%							    respectively indicates Unix or Windows as the required OS.
%   tmpTask.require_taskindex{task#}=               	%(numeric) Required methods to run before this method. 
%							    =[] no requirements to task-task#. (you only have to set this value 
%							        for one of the tasks)
%							    =0 requires task-task# to be completed with any method.
%							    =[1,2,x,...] requires method 1,2 or x in task-task# to be completed.
%   tmpTask.function_wrapper=                           %(string) Name of function wrapper used to interface the pipeline
%                                                           program and method.
%   tmpTask.prefix=                                     %(string) Prefix given to ouputfiles if empty no change==no outputfile.
%   tmpTask.documentation=                              %(string) Where to find documentation of current method, will appear
%                                                           in 'help' menu.
%   tmpTask.who_did=                                    %(string) Who did the programming/development of current method, will 
%                                                           appear in 'help' menu.
%   tmpTask.configurator_wrapper=                       %(string)(OPTINAL) If a configurator is available this function interface
%                                                           between the pipeline program and the configurator.
%   tmpTask.configurator.default=                       %(string/numeric/datastructure)(OPTIONAL) Default settings of method.
%   tmpTask.configurator.user=                          %(string/numeric/datastructure) (OPTIONAL) User selected settings of method.
%   tmpTask.configurator.configurator_name=             %(string) (OPTIONAL) Configurator function (*.m,*.exe or alike)
%                                                           called by the configurator_wrapper.
%   tmpTask.versionlabel=                               %(string) Textstring of used SW version number found in the functions. 
%                                                           Is used to track settings of a pipleine.
%
%
%   pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;  %(Matlab code) Update settings above in the data structure
%                                                           of the project 'project.pipeline.taskSetup{TaskIndex,MethodIndex}.
%___________________________________________________________________________________________________________________
%___________________________________________________________________________________________________________________
%SW version: 260803TD, T. Dyrby, 120303, NRU


%_______________setup TASK: Others______________________________________________________
tmpTask=[];

%TaskIndex=(end-1);% Others
%MethodIndex=(end-11);% Browse3D
tmpTask.task='Others';

tmpTask.method='Browse3D';
tmpTask.method_name='Browse3D';
tmpTask.function_name='browse3d';
tmpTask.description='Browse3D, a tool to inspect one image after a task';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=0; %task one required
tmpTask.function_wrapper='view_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others 
%MethodIndex=(end-10);% Browse2D
tmpTask.task='Others';

tmpTask.method='Browse2D';
tmpTask.method_name='Browse2D';
tmpTask.function_name='browse2d';
tmpTask.description='Browse2D, a tool to inspect one image after a task';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=0; %task one required
tmpTask.function_wrapper='view_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;



%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others
%MethodIndex=(end-9);% Inspect
tmpTask.task='Others';

tmpTask.function_name='nruinspect';
tmpTask.method_name='NRU inspect';
tmpTask.method='NRU inspect';
tmpTask.description='Inspect, a tool to inspect both functional and structural image after a task';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=0; %task one required
tmpTask.function_wrapper='view_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask.task=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others
%MethodIndex=(end-8);% SaveProject
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='Save project';
tmpTask.method='Save project';
tmpTask.description='Save selected files and convert to one og available formats';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %no tasks required
tmpTask.function_wrapper='saveProject_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-7);% LoadProject 
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='Load project';
tmpTask.method='Load project';
tmpTask.description='Load an existing project file to continue or redo a project';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %no tasks required
tmpTask.function_wrapper='loadProject_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-6);% New Project 
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='New project';
tmpTask.method='New project';
tmpTask.description='Make a new project';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required
tmpTask.function_wrapper='newProject_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-5);% Show result
tmpTask.task='Others';

tmpTask.function_name='';
tmpTask.method_name='Show results';
tmpTask.method='Show results';
tmpTask.description='Show results in the result/progress window in PVE lab';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required required
tmpTask.function_wrapper='showResult_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;
tmpTask=[];



%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-4);% saveAStemplate
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='Save as template';
tmpTask.method='Save as template';
tmpTask.description='Save settigs for a project into a template';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required required
tmpTask.function_wrapper='saveastemplate_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;



%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-3);% Load template into project
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='Load template';
tmpTask.method='Load template';
tmpTask.description='Load a template into a new project';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required
tmpTask.function_wrapper='loadtemplate_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;


%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-2);%Run all methods in pipeline
tmpTask.task='Others';

tmpTask.method='Run project';
tmpTask.method_name='Run project';
tmpTask.function_name='setupPipeline';
tmpTask.description='Run all tasks in given project given user selected methods';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required
tmpTask.function_wrapper='runProject_wrapper';
tmpTask.prefix='';
tmpTask.documentation='www.xxx.xxx';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;



%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end-1);% Load default setting for project
tmpTask.task='Others';

tmpTask.function_name='setupPipeline';
tmpTask.method_name='Default settings';
tmpTask.method='Default settings';
tmpTask.description='Load default setting into the given project';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required
tmpTask.function_wrapper='defaultSettings_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;



%___________________________________________________________________________________________________
tmpTask=[];
MethodIndex=1+MethodIndex;

%TaskIndex=(end-1);% Others (methods that do not affect the pipeline of the PVE correction prosess)
%MethodIndex=(end);% Set workspace
tmpTask.task='Others';

tmpTask.function_name='setWorkspace_wrapper';
tmpTask.method_name='Set workspace';
tmpTask.method='Set workspace';
tmpTask.description='Sets workspace for new projects';
tmpTask.require_os=0; %No OS required;
tmpTask.require_taskindex{1}=[]; %No tasks required
tmpTask.function_wrapper='setWorkspace_wrapper';
tmpTask.prefix='';
tmpTask.documentation='none';
tmpTask.who_did='NRU, 2003';
tmpTask.configurator_wrapper='';
tmpTask.configurator.default='';
tmpTask.configurator.user='';
tmpTask.configurator.configurator_name='';
tmpTask.versionlabel='SW version';
pipeline.taskSetup{TaskIndex,MethodIndex}=tmpTask;
tmpTask=[];

